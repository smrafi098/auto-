// Function to click the button
function clickButton() {
  // Get the button element by its class name
  const button = document.querySelector('.m-9e117634');

  // Check if the button element exists
  if (button) {
    // Programmatically trigger a click event on the button
    button.click();
  } else {
    console.warn('Button not found!');
  }
}

// Call the function to click the button initially
clickButton();

// Call the function to click the button every 2 seconds (2000 milliseconds)
setInterval(clickButton, 2000);


// Function to download all images within the specified area
function downloadImages() {
  // Retrieve processed URLs from local storage or initialize an empty array
  let processedUrls = JSON.parse(localStorage.getItem('processedUrls')) || [];

  // Select the container div (adjust the selector to target the container)
  const container = document.querySelector('.m-4451eb3a'); // Adjust the selector as needed
  
  if (!container) {
    console.error('Container not found!');
    return;
  }

  // Select all img elements within the container
  const images = container.querySelectorAll('img');
  
  // Iterate over each image and initiate the download
  images.forEach(image => {
    const imageUrl = image.src;
    
    // Check if the URL has already been processed
    if (!processedUrls.includes(imageUrl)) {
      const filename = imageUrl.substring(imageUrl.lastIndexOf('/') + 1); // Extract filename from URL
      
      // Fetch the image data
      fetch(imageUrl)
        .then(response => response.blob())
        .then(blob => {
          // Create a temporary anchor element to trigger the download
          const link = document.createElement('a');
          link.href = URL.createObjectURL(blob);
          link.download = filename;
          link.style.display = 'none';
          
          // Append the anchor element to the document body
          document.body.appendChild(link);
          
          // Trigger the download
          link.click();
          
          // Clean up by removing the anchor element
          document.body.removeChild(link);
          
          // Add the URL to the list of processed URLs
          processedUrls.push(imageUrl);
          
          // Save the updated list of processed URLs to local storage
          localStorage.setItem('processedUrls', JSON.stringify(processedUrls));
        })
        .catch(error => console.error('Error downloading image:', error));
    }
  });
}

// Call the function initially
downloadImages();

// Call the function every 1 second (1000 milliseconds)
setInterval(downloadImages, 1000);
